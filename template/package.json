{
  "type": "commonjs",
  "name": "kurita-coupa-integration",
  "description": "Integration between SBO and Coupa for Kurita",
  "scripts": {
     "// ========================": "",
   "// === BUILD SCRIPTS =====": "",
    "start-debug": "cross-env-shell NODE_ENV=$NODE_ENV node scripts/start.js --local",
    "run-debug": "nodemon --watch src --ext ts,json --exec \"pnpm run start-debug\"",
    "build:release:dev": "cross-env NODE_ENV=development node scripts/esbuild/release.js",
    "build:release:test": "cross-env NODE_ENV=test node scripts/esbuild/release.js",
    "build:release:prod": "cross-env NODE_ENV=production node scripts/esbuild/release.js",
    "deploy:service:dev": "node scripts/deploy-service.js --env=development",
    "deploy:service:test": "node scripts/deploy-service.js --env=test",
    "deploy:service:prod": "node scripts/deploy-service.js --env=production",
    "build:debug:test:local": "cross-env NODE_ENV=test node scripts/esbuild/debug.js --local",
    "build:release:dev:local": "cross-env NODE_ENV=development node scripts/esbuild/release.js --local",
    "build:release:test:local": "cross-env NODE_ENV=test node scripts/esbuild/release.js --local",
    "build:release:prod:local": "cross-env NODE_ENV=production node scripts/esbuild/release.js --local",
    "start:release:dev:local": "cross-env NODE_ENV=development node scripts/run.js --local",
    "start:release:test:local": "cross-env NODE_ENV=test node scripts/run.js --local",
    "start:release:prod:local": "cross-env NODE_ENV=production node scripts/run.js --local",
    "start:debug:dev:local": "cross-env NODE_ENV=development node scripts/run.js --local",
    "start:debug:test:local": "cross-env NODE_ENV=test node scripts/run.js --local",
    "start:debug:prod:local": "cross-env NODE_ENV=production node scripts/run.js --local",
    "start:release:dev": "cross-env NODE_ENV=development node scripts/run.js",
    "start:release:prod": "cross-env NODE_ENV=production node scripts/run.js",
    "uninstall:service:dev": "node scripts/uninstall-service.js --env=development",
    "uninstall:service:test": "node scripts/uninstall-service.js --env=test",
    "uninstall:service:prod": "node scripts/uninstall-service.js --env=production",
    "oldbuild": "tsc",
    "oldstart": "node dist/index.js",
    "olddev": "ts-node-dev --respawn --transpile-only -r tsconfig-paths/register src/index.ts",
    "olddev2": "ts-node-dev --respawn --transpile-only src/index.ts",
    "startt": "node -r tsconfig-paths/register dist/index.js",
    "oldclean": "rimraf node_modules && rimraf bun.lock",
    "setup:dev": "NODE_ENV=development bun run scripts/setups/setup.ts",
    "setup:test": "NODE_ENV=test bun run scripts/setups/setup.ts",
    "setup:prod": "NODE_ENV=production bun run scripts/setups/setup.ts",
    "udfs:dev": "NODE_ENV=development bun run scripts/setups/multi_tenant_udfs/index.ts",
    "multi-setup:dev": "NODE_ENV=development bun run scripts/setups/multi-setup.ts",
    "multi-setup:test": "NODE_ENV=test bun run scripts/setups/multi-setup.ts",
    "multi-setup:prod": "NODE_ENV=production bun run scripts/setups/multi-setup.ts",
    "import:dev": "NODE_ENV=development bun run scripts/imports/import.ts",
    "import:test": "NODE_ENV=test bun run scripts/imports/import.ts",
    "import:prod": "NODE_ENV=production bun run scripts/imports/import.ts",
    "_deploy-service:test": "NODE_ENV=test bun run scripts/deployments/libs/deploy-service.ts",
    "_deploy-service:prod": "NODE_ENV=production bun run scripts/deployments/libs/deploy-service.ts",
    "deploy-service:test": "bun exec ./scripts/deployments/cmd/deploy-service-test.bat",
    "deploy-service:prod": "bun exec ./scripts/deployments/cmd/deploy-service-prod.bat",
    "_remove-service:test": "NODE_ENV=test bun run scripts/deployments/libs/remove-service.ts",
    "_remove-service:prod": "NODE_ENV=production bun run scripts/deployments/libs/remove-service.ts",
    "remove-service:test": "bun exec scripts/deployments/cmd/remove-service-test.bat",
    "remove-service:prod": "bun exec scripts/deployments/cmd/remove-service-prod.bat",
    "_stop-service:test": "NODE_ENV=test bun run scripts/deployments/libs/stop-service.ts",
    "_stop-service:prod": "NODE_ENV=production bun run scripts/deployments/libs/stop-service.ts",
    "stop-service:test": "bun exec scripts/deployments/cmd/stop-service-test.bat",
    "stop-service:prod": "bun exec scripts/deployments/cmd/stop-service-prod.bat",
    "edit-service:test": "NODE_ENV=test bun run scripts/deployments/libs/edit-service.ts",
    "edit-service:prod": "NODE_ENV=production bun run scripts/deployments/libs/edit-service.ts",
    "exec-service:test": "NODE_ENV=test ./bin/test/app-test-x64",
    "exec-service:prod": "NODE_ENV=production ./bin/production/app-prod-x64"
  },
  "dependencies": {
    "@hono/node-server": "^1.14.0",
    "@hono/zod-openapi": "^0.18.4",
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/auto-instrumentations-node": "^0.57.1",
    "@opentelemetry/instrumentation-http": "^0.200.0",
    "@opentelemetry/resources": "^2.0.0",
    "@opentelemetry/sdk-node": "^0.200.0",
    "@sap/hana-client": "^2.23.27",
    "@scalar/hono-api-reference": "^0.5.174",
    "@t3-oss/env-core": "^0.12.0",
    "@temporalio/client": "^1.11.7",
    "@temporalio/worker": "^1.11.7",
    "@temporalio/workflow": "^1.11.7",
    "agenda": "^5.0.0",
    "agendash": "^1.0.0",
    "agendash2": "^0.8.2",
    "axios": "^1.8.4",
    "axios-retry": "^4.5.0",
    "bree": "^9.2.4",
    "bullmq": "^5.48.1",
    "chalk": "^5.4.1",
    "cron-validate": "^1.4.5",
    "croner": "^9.0.0",
    "cronstrue": "^2.54.0",
    "dayjs": "^1.11.13",
    "dotenv": "^16.4.7",
    "dotenv-json": "^1.0.0",
    "express": "^4.17.1",
    "hono": "^4.7.5",
    "is-admin": "^4.0.0",
    "json-colorizer": "^3.0.1",
    "jsonwebtoken": "^9.0.2",
    "mssql": "^11.0.1",
    "node-fetch": "^3.3.2",
    "p-limit": "^6.2.0",
    "path-to-regexp": "^8.2.0",
    "pg-boss": "^10.2.0",
    "pnpm": "^10.8.0",
    "pretty-error": "^4.0.0",
    "reflect-metadata": "^0.2.2",
    "source-map-support": "^0.5.21",
    "strip-json-comments": "^5.0.1",
    "uuid": "^11.1.0",
    "winston": "^3.17.0",
    "winston-daily-rotate-file": "^5.0.0",
    "zod": "^3.24.2"
  },
  "devDependencies": {
    "@types/express": "^5.0.1",
    "@types/jsonwebtoken": "^9.0.9",
    "@types/mssql": "^9.1.7",
    "@types/node": "^22.14.0",
    "@types/winston": "^2.4.4",
    "concurrently": "^9.1.2",
    "cross-env": "^7.0.3",
    "esbuild": "^0.25.2",
    "esbuild-plugin-glob": "^2.2.3",
    "node-windows": "1.0.0-beta.8",
    "nodemon": "^3.1.9",
    "ts-node": "^10.9.2",
    "ts-node-dev": "^2.0.0",
    "tsconfig-paths": "^4.2.0",
    "tsx": "^4.19.3",
    "typescript": "^5.8.3"
  }
}
